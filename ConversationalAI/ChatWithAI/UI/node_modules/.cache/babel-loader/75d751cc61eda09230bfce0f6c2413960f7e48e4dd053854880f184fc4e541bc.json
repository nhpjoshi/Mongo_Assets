{"ast":null,"code":"var _jsxFileName = \"/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ChatWithAI/UI/src/component/ConversationTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationTable = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4011/api/get-conversations\");\n        const data = await response.json();\n        setConversations(data.conversations || []);\n      } catch (error) {\n        console.error(\"Error fetching conversations:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConversations();\n  }, []);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  const handleDownload = async sessionId => {\n    try {\n      const response = await fetch(`http://localhost:4012/api/download-conversation/${sessionId}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to download the conversation.\");\n      }\n      const blob = await response.blob(); // Get the file blob from the response\n      const link = document.createElement(\"a\"); // Create a temporary link element\n      link.href = URL.createObjectURL(blob); // Create an object URL for the blob\n      link.download = `conversation_${sessionId}.txt`; // Set the file name\n      link.click(); // Programmatically click the link to trigger the download\n    } catch (error) {\n      console.error(\"Error downloading conversation:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      textAlign: \"center\",\n      width: \"98%\",\n      maxWidth: \"1600px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Conversation History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading conversations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\",\n        borderCollapse: \"collapse\",\n        fontSize: \"1.1em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Session ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Ethereum Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Creation Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: conversations.length > 0 ? conversations.map((conversation, index) => {\n          var _conversation$apiResp;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: conversation.sessionId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDownload(conversation.sessionId),\n                children: \"Download Conversation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: ((_conversation$apiResp = conversation.apiResponse) === null || _conversation$apiResp === void 0 ? void 0 : _conversation$apiResp.transactionHash) || \"No hash available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCellStyle,\n              children: conversation.createdAt ? formatDate(conversation.createdAt) : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            style: tableCellStyle,\n            children: \"No conversations available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationTable, \"VioyIQZSz3gKtrbXiAHZOh459DE=\");\n_c = ConversationTable;\nconst tableHeaderStyle = {\n  padding: \"15px\",\n  borderBottom: \"1px solid #ddd\",\n  backgroundColor: \"#f2f2f2\",\n  textAlign: \"left\"\n};\nconst tableCellStyle = {\n  padding: \"15px\",\n  borderBottom: \"1px solid #ddd\",\n  wordWrap: \"break-word\",\n  maxWidth: \"400px\"\n};\nexport default ConversationTable;\nvar _c;\n$RefreshReg$(_c, \"ConversationTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ConversationTable","_s","conversations","setConversations","loading","setLoading","fetchConversations","response","fetch","data","json","error","console","formatDate","dateString","date","Date","toLocaleString","handleDownload","sessionId","ok","Error","blob","link","document","createElement","href","URL","createObjectURL","download","click","style","marginTop","textAlign","width","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","borderCollapse","fontSize","tableHeaderStyle","length","map","conversation","index","_conversation$apiResp","tableCellStyle","onClick","apiResponse","transactionHash","createdAt","colSpan","_c","padding","borderBottom","backgroundColor","wordWrap","$RefreshReg$"],"sources":["/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ChatWithAI/UI/src/component/ConversationTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ConversationTable = () => {\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const response = await fetch(\n          \"http://localhost:4011/api/get-conversations\"\n        );\n        const data = await response.json();\n        setConversations(data.conversations || []);\n      } catch (error) {\n        console.error(\"Error fetching conversations:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchConversations();\n  }, []);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  const handleDownload = async (sessionId) => {\n    try {\n      const response = await fetch(\n        `http://localhost:4012/api/download-conversation/${sessionId}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to download the conversation.\");\n      }\n\n      const blob = await response.blob(); // Get the file blob from the response\n      const link = document.createElement(\"a\"); // Create a temporary link element\n      link.href = URL.createObjectURL(blob); // Create an object URL for the blob\n      link.download = `conversation_${sessionId}.txt`; // Set the file name\n      link.click(); // Programmatically click the link to trigger the download\n    } catch (error) {\n      console.error(\"Error downloading conversation:\", error);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        marginTop: \"20px\",\n        textAlign: \"center\",\n        width: \"98%\",\n        maxWidth: \"1600px\",\n        margin: \"auto\",\n      }}\n    >\n      <h2>Conversation History</h2>\n      {loading ? (\n        <p>Loading conversations...</p>\n      ) : (\n        <table\n          style={{\n            width: \"100%\",\n            margin: \"auto\",\n            borderCollapse: \"collapse\",\n            fontSize: \"1.1em\",\n          }}\n        >\n          <thead>\n            <tr>\n              <th style={tableHeaderStyle}>Session ID</th>\n              <th style={tableHeaderStyle}>Conversation</th>\n              <th style={tableHeaderStyle}>Ethereum Hash</th>\n              <th style={tableHeaderStyle}>Creation Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {conversations.length > 0 ? (\n              conversations.map((conversation, index) => (\n                <tr key={index}>\n                  <td style={tableCellStyle}>{conversation.sessionId}</td>\n                  <td style={tableCellStyle}>\n                    <button\n                      onClick={() => handleDownload(conversation.sessionId)}\n                    >\n                      Download Conversation\n                    </button>\n                  </td>\n                  <td style={tableCellStyle}>\n                    {conversation.apiResponse?.transactionHash ||\n                      \"No hash available\"}\n                  </td>\n                  <td style={tableCellStyle}>\n                    {conversation.createdAt\n                      ? formatDate(conversation.createdAt)\n                      : \"N/A\"}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"4\" style={tableCellStyle}>\n                  No conversations available\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nconst tableHeaderStyle = {\n  padding: \"15px\",\n  borderBottom: \"1px solid #ddd\",\n  backgroundColor: \"#f2f2f2\",\n  textAlign: \"left\",\n};\n\nconst tableCellStyle = {\n  padding: \"15px\",\n  borderBottom: \"1px solid #ddd\",\n  wordWrap: \"break-word\",\n  maxWidth: \"400px\",\n};\n\nexport default ConversationTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,gBAAgB,CAACM,IAAI,CAACP,aAAa,IAAI,EAAE,CAAC;MAC5C,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,SAAS,IAAK;IAC1C,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDAAmDW,SAAS,EAC9D,CAAC;MAED,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;MACzD;MAEA,MAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACe,IAAI,CAAC,CAAC,CAAC,CAAC;MACpC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;MAC1CF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAAC,CAAC;MACvCC,IAAI,CAACM,QAAQ,GAAG,gBAAgBV,SAAS,MAAM,CAAC,CAAC;MACjDI,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,oBACEZ,OAAA;IACEgC,KAAK,EAAE;MACLC,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAE,QAAQ;MAClBC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBAEFtC,OAAA;MAAAsC,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BrC,OAAO,gBACNL,OAAA;MAAAsC,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE/B1C,OAAA;MACEgC,KAAK,EAAE;QACLG,KAAK,EAAE,MAAM;QACbE,MAAM,EAAE,MAAM;QACdM,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE;MACZ,CAAE;MAAAN,QAAA,gBAEFtC,OAAA;QAAAsC,QAAA,eACEtC,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YAAIgC,KAAK,EAAEa,gBAAiB;YAAAP,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5C1C,OAAA;YAAIgC,KAAK,EAAEa,gBAAiB;YAAAP,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9C1C,OAAA;YAAIgC,KAAK,EAAEa,gBAAiB;YAAAP,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/C1C,OAAA;YAAIgC,KAAK,EAAEa,gBAAiB;YAAAP,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR1C,OAAA;QAAAsC,QAAA,EACGnC,aAAa,CAAC2C,MAAM,GAAG,CAAC,GACvB3C,aAAa,CAAC4C,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK;UAAA,IAAAC,qBAAA;UAAA,oBACpClD,OAAA;YAAAsC,QAAA,gBACEtC,OAAA;cAAIgC,KAAK,EAAEmB,cAAe;cAAAb,QAAA,EAAEU,YAAY,CAAC5B;YAAS;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxD1C,OAAA;cAAIgC,KAAK,EAAEmB,cAAe;cAAAb,QAAA,eACxBtC,OAAA;gBACEoD,OAAO,EAAEA,CAAA,KAAMjC,cAAc,CAAC6B,YAAY,CAAC5B,SAAS,CAAE;gBAAAkB,QAAA,EACvD;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACL1C,OAAA;cAAIgC,KAAK,EAAEmB,cAAe;cAAAb,QAAA,EACvB,EAAAY,qBAAA,GAAAF,YAAY,CAACK,WAAW,cAAAH,qBAAA,uBAAxBA,qBAAA,CAA0BI,eAAe,KACxC;YAAmB;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,eACL1C,OAAA;cAAIgC,KAAK,EAAEmB,cAAe;cAAAb,QAAA,EACvBU,YAAY,CAACO,SAAS,GACnBzC,UAAU,CAACkC,YAAY,CAACO,SAAS,CAAC,GAClC;YAAK;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAjBEO,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBV,CAAC;QAAA,CACN,CAAC,gBAEF1C,OAAA;UAAAsC,QAAA,eACEtC,OAAA;YAAIwD,OAAO,EAAC,GAAG;YAACxB,KAAK,EAAEmB,cAAe;YAAAb,QAAA,EAAC;UAEvC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CAhHID,iBAAiB;AAAAwD,EAAA,GAAjBxD,iBAAiB;AAkHvB,MAAM4C,gBAAgB,GAAG;EACvBa,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,gBAAgB;EAC9BC,eAAe,EAAE,SAAS;EAC1B1B,SAAS,EAAE;AACb,CAAC;AAED,MAAMiB,cAAc,GAAG;EACrBO,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,gBAAgB;EAC9BE,QAAQ,EAAE,YAAY;EACtBzB,QAAQ,EAAE;AACZ,CAAC;AAED,eAAenC,iBAAiB;AAAC,IAAAwD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}