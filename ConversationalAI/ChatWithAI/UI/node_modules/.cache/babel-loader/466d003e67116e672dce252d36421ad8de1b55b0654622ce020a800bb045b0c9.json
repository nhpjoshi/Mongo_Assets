{"ast":null,"code":"var _jsxFileName = \"/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ServerCode/UI/llama-client/src/component/ConversationTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationTable = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch conversations from MongoDB\n    const fetchConversations = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3011/api/get-conversations\");\n        const data = await response.json();\n        setConversations(data.conversations || []);\n      } catch (error) {\n        console.error(\"Error fetching conversations:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConversations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Conversation History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading conversations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"80%\",\n        margin: \"auto\",\n        borderCollapse: \"collapse\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Session ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Ethereum Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: conversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: conversation.sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: conversation.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: conversation.flag ? \"True\" : \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationTable, \"VioyIQZSz3gKtrbXiAHZOh459DE=\");\n_c = ConversationTable;\nconst tableHeaderStyle = {\n  padding: \"10px\",\n  borderBottom: \"1px solid #ddd\",\n  backgroundColor: \"#f2f2f2\",\n  textAlign: \"left\"\n};\nconst tableCellStyle = {\n  padding: \"10px\",\n  borderBottom: \"1px solid #ddd\"\n};\nexport default ConversationTable;\nvar _c;\n$RefreshReg$(_c, \"ConversationTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ConversationTable","_s","conversations","setConversations","loading","setLoading","fetchConversations","response","fetch","data","json","error","console","style","marginTop","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","width","margin","borderCollapse","tableHeaderStyle","map","conversation","index","tableCellStyle","sessionId","input","flag","_c","padding","borderBottom","backgroundColor","$RefreshReg$"],"sources":["/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ServerCode/UI/llama-client/src/component/ConversationTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ConversationTable = () => {\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch conversations from MongoDB\n    const fetchConversations = async () => {\n      try {\n        const response = await fetch(\n          \"http://localhost:3011/api/get-conversations\"\n        );\n        const data = await response.json();\n        setConversations(data.conversations || []);\n      } catch (error) {\n        console.error(\"Error fetching conversations:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchConversations();\n  }, []);\n\n  return (\n    <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n      <h2>Conversation History</h2>\n      {loading ? (\n        <p>Loading conversations...</p>\n      ) : (\n        <table\n          style={{ width: \"80%\", margin: \"auto\", borderCollapse: \"collapse\" }}\n        >\n          <thead>\n            <tr>\n              <th style={tableHeaderStyle}>Session ID</th>\n              <th style={tableHeaderStyle}>Input</th>\n              <th style={tableHeaderStyle}>Ethereum Hash</th>\n            </tr>\n          </thead>\n          <tbody>\n            {conversations.map((conversation, index) => (\n              <tr key={index}>\n                <td style={tableCellStyle}>{conversation.sessionId}</td>\n                <td style={tableCellStyle}>{conversation.input}</td>\n                <td style={tableCellStyle}>\n                  {conversation.flag ? \"True\" : \"False\"}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nconst tableHeaderStyle = {\n  padding: \"10px\",\n  borderBottom: \"1px solid #ddd\",\n  backgroundColor: \"#f2f2f2\",\n  textAlign: \"left\",\n};\n\nconst tableCellStyle = {\n  padding: \"10px\",\n  borderBottom: \"1px solid #ddd\",\n};\n\nexport default ConversationTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}