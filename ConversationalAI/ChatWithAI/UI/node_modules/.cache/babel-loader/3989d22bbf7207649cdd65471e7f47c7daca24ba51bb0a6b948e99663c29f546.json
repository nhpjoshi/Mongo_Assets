{"ast":null,"code":"var _jsxFileName = \"/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ServerCode/UI/llama-client/src/component/PromptInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TextInput from \"./component/TextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PromptInput() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [conversation, setConversation] = useState(\"\");\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://localhost:4000\");\n    setWs(socket);\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.response) {\n        setConversation(prev => `${prev}\\nLlama: ${data.response}`);\n      } else {\n        console.error(\"Unexpected response format:\", data);\n      }\n    };\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const handleInputChange = e => {\n    setQuestion(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (question.trim() === \"\" || !ws) return;\n    setConversation(prev => `${prev}\\nUser: ${question}`);\n    const message = {\n      model: \"llama3:8b\",\n      prompt: conversation + `\\nUser: ${question}`,\n      stream: false\n    };\n    ws.send(JSON.stringify(message));\n    setQuestion(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alsurance - Own Your Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      style: {\n        width: \"80%\",\n        height: \"200px\",\n        marginBottom: \"10px\"\n      },\n      value: conversation,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      value: question,\n      onChange: handleInputChange,\n      onEnter: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      style: {\n        padding: \"10px 20px\",\n        marginTop: \"10px\"\n      },\n      children: \"Own Your Creation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(PromptInput, \"TrJsvJbwdRmaSoQWVaXzIMX6uyo=\");\n_c = PromptInput;\nexport default PromptInput;\nvar _c;\n$RefreshReg$(_c, \"PromptInput\");","map":{"version":3,"names":["React","useState","useEffect","TextInput","jsxDEV","_jsxDEV","PromptInput","_s","question","setQuestion","conversation","setConversation","ws","setWs","socket","WebSocket","onmessage","event","data","JSON","parse","response","prev","console","error","close","handleInputChange","e","target","value","handleSendMessage","trim","message","model","prompt","stream","send","stringify","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","marginBottom","readOnly","onChange","onEnter","onClick","padding","_c","$RefreshReg$"],"sources":["/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ServerCode/UI/llama-client/src/component/PromptInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextInput from \"./component/TextInput\";\n\nfunction PromptInput() {\n  const [question, setQuestion] = useState(\"\");\n  const [conversation, setConversation] = useState(\"\");\n  const [ws, setWs] = useState(null);\n\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://localhost:4000\");\n    setWs(socket);\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.response) {\n        setConversation((prev) => `${prev}\\nLlama: ${data.response}`);\n      } else {\n        console.error(\"Unexpected response format:\", data);\n      }\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const handleInputChange = (e) => {\n    setQuestion(e.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (question.trim() === \"\" || !ws) return;\n\n    setConversation((prev) => `${prev}\\nUser: ${question}`);\n\n    const message = {\n      model: \"llama3:8b\",\n      prompt: conversation + `\\nUser: ${question}`,\n      stream: false,\n    };\n\n    ws.send(JSON.stringify(message));\n    setQuestion(\"\");\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n      <h1>Alsurance - Own Your Prompts</h1>\n      <textarea\n        style={{ width: \"80%\", height: \"200px\", marginBottom: \"10px\" }}\n        value={conversation}\n        readOnly\n      />\n      <TextInput\n        value={question}\n        onChange={handleInputChange}\n        onEnter={handleSendMessage}\n      />\n      <button\n        onClick={handleSendMessage}\n        style={{ padding: \"10px 20px\", marginTop: \"10px\" }}\n      >\n        Own Your Creation\n      </button>\n    </div>\n  );\n}\n\nexport default PromptInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}