{"ast":null,"code":"var _jsxFileName = \"/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ServerCode/UI/llama-client/src/component/PromptInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TextInput from \"./TextInput\";\nimport TextArea from \"./TextArea\";\nimport Button from \"./Button\";\nimport \"./PromptInput.css\"; // Import the CSS file for animations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PromptInput() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [conversation, setConversation] = useState([]); // Store conversation as an array of objects\n  const [ws, setWs] = useState(null);\n  const [isThinking, setIsThinking] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [showGotIt, setShowGotIt] = useState(false);\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://localhost:4000\");\n    setWs(socket);\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.response) {\n        setShowGotIt(true);\n        setTimeout(() => setShowGotIt(false), 1000);\n        displayResponseLetterByLetter(data.response);\n      } else {\n        console.error(\"Unexpected response format:\", data);\n      }\n    };\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const handleInputChange = e => {\n    setQuestion(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (question.trim() === \"\" || !ws) return;\n\n    // Adding the separator and user message to the conversation array\n    setConversation(prev => [...prev, {\n      type: \"user\",\n      text: question\n    }, {\n      type: \"separator\"\n    } // Add separator after user message\n    ]);\n    setAiResponse(\"\");\n    setIsThinking(true);\n    const message = {\n      model: \"llama3:8b\",\n      prompt: conversation.map(msg => msg.text).join(\"\\n\") + `\\nYou: ${question}`,\n      stream: false\n    };\n    ws.send(JSON.stringify(message));\n    setQuestion(\"\");\n  };\n  const displayResponseLetterByLetter = response => {\n    setIsThinking(false);\n    setIsTyping(true);\n    let currentText = \"\";\n    const delay = 20;\n    response.split(\"\").forEach((char, index) => {\n      setTimeout(() => {\n        currentText += char;\n        setAiResponse(currentText);\n        if (index === response.length - 1) {\n          setIsTyping(false);\n          // Adding the separator and AI response to the conversation array\n          setConversation(prev => [...prev, {\n            type: \"separator\"\n          }, {\n            type: \"ai\",\n            text: currentText\n          }]);\n          setAiResponse(\"\");\n        }\n      }, index * delay);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alsurance - Own Your Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      value: conversation.map(msg => {\n        if (msg.type === \"user\") {\n          return `You: ${msg.text}`;\n        } else if (msg.type === \"ai\") {\n          return `Llama: ${msg.text}`;\n        } else if (msg.type === \"separator\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 22\n          }, this);\n        }\n        return \"\";\n      }).reduce((acc, curr) => acc + \"\\n\" + curr, \"\") // Join the conversation with separators\n      ,\n      placeholder: \"The AI response will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), showGotIt && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\",\n        marginTop: \"10px\"\n      },\n      children: \"Got it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), isThinking && !showGotIt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thinking-animation\",\n      children: [\"Thinking\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-animation\",\n      children: [\"Typing\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      value: question,\n      onChange: handleInputChange,\n      onEnter: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(PromptInput, \"I394VAtv8TFd3oh9w0hgEiVbwoU=\");\n_c = PromptInput;\nexport default PromptInput;\nvar _c;\n$RefreshReg$(_c, \"PromptInput\");","map":{"version":3,"names":["React","useState","useEffect","TextInput","TextArea","Button","jsxDEV","_jsxDEV","PromptInput","_s","question","setQuestion","conversation","setConversation","ws","setWs","isThinking","setIsThinking","isTyping","setIsTyping","aiResponse","setAiResponse","showGotIt","setShowGotIt","socket","WebSocket","onmessage","event","data","JSON","parse","response","setTimeout","displayResponseLetterByLetter","console","error","close","handleInputChange","e","target","value","handleSendMessage","trim","prev","type","text","message","model","prompt","map","msg","join","stream","send","stringify","currentText","delay","split","forEach","char","index","length","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","reduce","acc","curr","placeholder","color","onChange","onEnter","onClick","_c","$RefreshReg$"],"sources":["/Users/nitish.joshi/Documents/GitHub/Mongo_Assets/TestConAI/ServerCode/UI/llama-client/src/component/PromptInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextInput from \"./TextInput\";\nimport TextArea from \"./TextArea\";\nimport Button from \"./Button\";\nimport \"./PromptInput.css\"; // Import the CSS file for animations\n\nfunction PromptInput() {\n  const [question, setQuestion] = useState(\"\");\n  const [conversation, setConversation] = useState([]); // Store conversation as an array of objects\n  const [ws, setWs] = useState(null);\n  const [isThinking, setIsThinking] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [showGotIt, setShowGotIt] = useState(false);\n\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://localhost:4000\");\n    setWs(socket);\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.response) {\n        setShowGotIt(true);\n        setTimeout(() => setShowGotIt(false), 1000);\n        displayResponseLetterByLetter(data.response);\n      } else {\n        console.error(\"Unexpected response format:\", data);\n      }\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const handleInputChange = (e) => {\n    setQuestion(e.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (question.trim() === \"\" || !ws) return;\n\n    // Adding the separator and user message to the conversation array\n    setConversation((prev) => [\n      ...prev,\n      { type: \"user\", text: question },\n      { type: \"separator\" }, // Add separator after user message\n    ]);\n    setAiResponse(\"\");\n    setIsThinking(true);\n\n    const message = {\n      model: \"llama3:8b\",\n      prompt:\n        conversation.map((msg) => msg.text).join(\"\\n\") + `\\nYou: ${question}`,\n      stream: false,\n    };\n\n    ws.send(JSON.stringify(message));\n    setQuestion(\"\");\n  };\n\n  const displayResponseLetterByLetter = (response) => {\n    setIsThinking(false);\n    setIsTyping(true);\n\n    let currentText = \"\";\n    const delay = 20;\n\n    response.split(\"\").forEach((char, index) => {\n      setTimeout(() => {\n        currentText += char;\n        setAiResponse(currentText);\n\n        if (index === response.length - 1) {\n          setIsTyping(false);\n          // Adding the separator and AI response to the conversation array\n          setConversation((prev) => [\n            ...prev,\n            { type: \"separator\" },\n            { type: \"ai\", text: currentText },\n          ]);\n          setAiResponse(\"\");\n        }\n      }, index * delay);\n    });\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n      <h1>Alsurance - Own Your Prompts</h1>\n      <TextArea\n        value={conversation\n          .map((msg) => {\n            if (msg.type === \"user\") {\n              return `You: ${msg.text}`;\n            } else if (msg.type === \"ai\") {\n              return `Llama: ${msg.text}`;\n            } else if (msg.type === \"separator\") {\n              return <div className=\"separator\" />;\n            }\n            return \"\";\n          })\n          .reduce((acc, curr) => acc + \"\\n\" + curr, \"\")} // Join the conversation with separators\n        placeholder=\"The AI response will appear here.\"\n      />\n      {showGotIt && (\n        <div style={{ color: \"green\", marginTop: \"10px\" }}>Got it!</div>\n      )}\n      {isThinking && !showGotIt && (\n        <div className=\"thinking-animation\">\n          Thinking<span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </div>\n      )}\n      {isTyping && (\n        <div className=\"typing-animation\">\n          Typing<span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </div>\n      )}\n      <TextInput\n        value={question}\n        onChange={handleInputChange}\n        onEnter={handleSendMessage}\n      />\n      <Button onClick={handleSendMessage} />\n    </div>\n  );\n}\n\nexport default PromptInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}